Release Notes for Version 1.0-beta-3

Release date: 2017-03-30
Intended compatibility: WSUS Offline Update version 10.9.1 - 10.9.2

This is a maintenance release to keep up with WSUS Offline Update
10.9.1 and 10.9.2. It offers the following changes:

- Some more Service Packs are excluded, if the option -includesp is
  not used.

  This was suggested by negg and me in
  <http://forums.wsusoffline.net/viewtopic.php?f=3&t=6143>.

  If the option -includesp for Service Packs is missing, then the
  ExcludeList-SPs.txt is applied to both statically defined and
  dynamically determined updates. Previously, it was only applied to
  statically defined updates. The result is, that some more updates are
  excluded, if the option -includesp is not used.

  In the Windows version, this corresponds to the option "Include Service
  Packs" in UpdateGenerator.exe.


- Empty download directories are now deleted, along with the corresponding
  hashes file.

  If the option -includesp is missing, then some download directories
  may end up empty, for example:

  wsusoffline/client/o2k7/deu
  wsusoffline/client/o2k10/deu
  wsusoffline/client/o2k13/deu

  Currently, these directories contain Service Packs only. If Service
  Packs are excluded, then the directories should be empty.

  The correct handling of empty directories is, to delete the directories
  and the corresponding hashdeep files. This is the same approach as in
  the Windows script DownloadUpdates.cmd.

  Note, however, that the cleanup function in the Linux scripts does not
  delete existing Service Packs, if they are still referenced from the
  static directory. Instead, they are only reported as "valid static
  files". In this case, they must be removed manually and then they
  won't get downloaded again.

  This was introduced to keep localized downloads, if different languages
  are downloaded in turn, but the same mechanism also protects existing
  downloads in a few similar cases.


- A bug in the handling of empty directories was found and fixed.

  grep is used to extract information from text files. In most cases, only
  the standard output of grep is needed. grep also sets a result code,
  but this information is not really needed, if the standard output is
  used. A result code of "1" means, that there are no matching lines, and
  that the standard output will be empty. This information is redundant
  and not an error by itself.

  But a result code of "1" causes an error, if the shell option errexit
  or a trap on ERR is used. Then the result code must be masked like:

  grep ... || true


- The script 40-check-for-self-updates.bash was split into two smaller
  scripts, to handle its tasks separately.

  In the previous version 1.0-beta-2, the script
  40-check-for-self-updates.bash handled both version updates for WSUS
  Offline Update and the update of the configuration files in the static
  and exclude directories.

  These tasks are now handled by two smaller scripts:

  50-check-wsusoffline-version.bash
  70-update-configuration-files.bash

  The Windows version uses different scripts for these tasks as well: The
  application UpdateGenerator.exe initiates a version check by calling
  CheckOUVersion.cmd. A self update is done by the script UpdateOU.new,
  which will be renamed to UpdateOU.cmd. The script DownloadUpdates.cmd
  handles the updates of the configuration files in the static and
  exclude directories.


- An online check for new versions of the Linux scripts is introduced
  with the new script 60-check-script-version.bash.

  This feature was requested by crashmaster in
  <http://forums.wsusoffline.net/viewtopic.php?f=9&t=6180#p21683>.

  The approach is quite similar to the version check for WSUS Offline
  Update: The file installed-version.txt is included in the archive,
  and a second file available-version.txt will be downloaded from
  the Internet. If these files differ, then a new version of the Linux
  scripts is available. The file available-version.txt has the necessary
  information to download and install the new version.

  But maybe this option should be tested some more. Therefore, the
  script 60-check-script-version.bash has been moved to the directory
  available-tasks. To enable it, it must be moved to the directory
  common-tasks.


- A new configuration variable "unattended_updates" is introduced to
  install new versions of WSUS Offline Update or the Linux scripts
  automatically.

  This was also a suggestion by crashmaster.

  By default, the scripts 50-check-wsusoffline-version.bash and
  60-check-script-version.bash will not install new versions of WSUS Offline
  Update or the Linux scripts without confirmation. Both scripts report
  new versions and then ask for confirmation to install them. After 30
  seconds this question defaults to "no".

  Then these scripts won't be blocked and wait forever, but if nobody
  is watching, new versions won't get installed.

  The new configuration variable unattended_updates changes this behavior:
  new versions are reported, and the scripts still ask for confirmation,
  but after 30 seconds this question defaults to "yes" and then new
  versions are installed anyway. This may be better suited for cron jobs
  and similar automated tasks.

  The variable unattended_updates is defined and set to "disabled"
  in the scripts download-updates.bash and update-generator.bash. It
  should be changed to "enabled" in the file preferences.bash.


- A new file fix-file-permissions.bash was added to make the Linux
  scripts executable again, should they loose their file permissions.

  This is not necessary by now and not, if the Linux scripts are
  extracted from the original tar.gz archive. It may become necessary,
  if Linux scripts are included in a zip archive, which was created on
  Windows. Then Linux scripts will loose their file permissions and not
  be executable any more.

  The script fix-file-permissions.bash should correct that; but since
  it is also affected, it must be run once within the installation
  directory with:

  bash fix-file-permissions.bash

  zip archives created on Linux will preserve Linux file permissions;
  for example, the zip files available at GitHub surely work without
  such precautions.
